MyList Module
=============
>>> MyList = __import__('1-my_list').MyList

Tests
============
""" Test """
>>> my_list = MyList()
>>> my_list.append(0)
>>> print(my_list)
[0]

""" Tuple """
>>> my_list = MyList((2, 4))
>>> my_list
[2, 4]

""" Dict """
>>> my_list = MyList({'Bank':'Money'})
>>> my_list
['Bank']

""" String """
>>> my_list = MyList("hey")
>>> my_list
['h', 'e', 'y']

""" Set """
>>> my_list = MyList({'1', '2', '3'})
>>> my_list
print(my_list)
['1', '2', '3']


""" Print Sorted Test """
>>> my_list = MyList(range(10))
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]


Failure
---------------------------
""" Int """
>>> my_list = MyList(0)
Traceback (most recent call last):
	  ...
	  TypeError: 'int' object is not iterable

""" None """
>>> my_list = MyList(None)
Traceback (most recent call last):
	  ...
	  TypeError: 'NoneType' object is not iterable

""" Negative """
>>> my_list = MyList(-2)
Traceback (most recent call last):
	  ...
	  TypeError: 'int' object is not iterable

""" Float """
>>> my_list = MyList(1.2)
Traceback (most recent call last):
	  ...
	  TypeError: 'float' object is not iterable

""" Bool """
>>> my_list = MyList(True)
Traceback (most recent call last):
	  ...
	  TypeError: 'bool' object is not iterable

""" Double Arg """
>>> my_list = MyList(3, 4)
Traceback (most recent call last):
	  ...
	  TypeError: list() takes at most 1 argument (2 given)


""" Sorted Args """
>>> my_list.print_sorted("Holberton")
Traceback (most recent call last):
	  ...
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
